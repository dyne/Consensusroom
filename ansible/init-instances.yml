---
- name: Deploy oracles
  hosts: all
  remote_user: root
  become: true
  become_user: zenswarm
  vars:
    repo: https://github.com/dyne/restroom-vmlet-template
    basepath: /zenswarm
    nodes: 5
    base_port: 25000
    public_base_port: 20000
    subs_file: subscriptions.csv
    announce_url: "https://did.dyne.org/api/W3C-DID-controller-create-oracle-DID.chain "
    deannounce_url: "https://did.dyne.org/api/W3C-DID-controller-remove-oracle"
  tasks:
  - name: Load subscriptions
    set_fact:
      subscriptions: "{{ subscriptions|d([]) + [_item] }}"
    loop: "{{ lookup('file', subs_file).splitlines() }}"
    vars:
      _array: "{{ item.split() }}"
      _item: "{{ {'from': _array.0, 'to': _array.1} }}"

  - name: Stop running oracles
    command: pm2 kill

  # rm -f "~/.pm2/logs/restroom-mw-*"
  - name: Remove old logs
    ansible.builtin.file:
      path: ~/.pm2/logs
      state: absent

  - name: Create .env for each vmlet
    blockinfile:
      block: |
        CUSTOM_404_MESSAGE=nothing to see here
        ZENCODE_DIR="{{ wd }}/contracts"
        FILES_DIR={{ wd }}
        CHAIN_EXT=chain
        ANNOUNCE_URL="{{ announce_url | default('') }}"
        DEANNOUNCE_URL="{{ deannounce_url | default('') }}"
        OPENAPI=true
        COUNTRY="{{ country }}"
        HOST="{{ hostname }}"
        PRIVATE_ZENCODE_DIR="{{ basepath }}/private-contracts"
        SUBSCRIPTIONS="{{ subscriptions[item].from | default('')}}"
        L0_DEST="{{ subscriptions[item].to | default('') }}"
        YML_EXT=yml
        EXT_HOST="{{ ext_host }}"
        HTTP_PORT={{ item + base_port }}
        HTTPS_PORT={{ item + public_base_port }}
      path: "{{ wd }}/.env"
      create: yes
    loop: "{{ range(0, nodes) | list }}"
    vars:
      vmlet_name: "restroom-mw-{{ item }}"
      wd: "{{ basepath }}/vmlets/{{ vmlet_name }}"

  - name: Update packages of vmlet
    community.general.yarn:
      path: "{{ wd }}"
      state: latest
    loop: "{{ range(0, nodes) | list }}"
    vars:
      vmlet_name: "restroom-mw-{{ item }}"
      wd: "{{ basepath }}/vmlets/{{ vmlet_name }}"

  - name: Create private keys
    command:
      cmd: "yarn run init"
    args:
      chdir: "{{ wd }}/"
    loop: "{{ range(0, nodes) | list }}"
    vars:
      vmlet_name: "restroom-mw-{{ item }}"
      wd: "{{ basepath }}/vmlets/{{ vmlet_name }}"

  - name: Nginx service
    become: false
    blockinfile:
      dest: "/etc/nginx/conf.d/restroom-mw-{{ item }}.conf"
      create: true
      block: |
        server {
          listen {{ public_base_port + item }};
          root /var/www/html;

          location / {
            proxy_pass http://127.0.0.1:{{ base_port + item }}/;
          }
        }
    loop: "{{ range(0, nodes) | list }}"

  - name: Restart nginx
    become: false
    service: name=nginx state=restarted
